<?php

/**
 * @file
 * Form filter API ( Example ).
 *
 * Example work module.
 */

// Name form with filters.
define('FORMFILTERAPI_EXAMPLE_FORM_NAME', 'formfilterapi_example');

/**
 * Implements hook_menu().
 */
function formfilterapi_example_menu() {
  $items['formfilterapi_example'] = array(
    'title' => 'Form filter API',
    'page callback' => 'formfilterapi_example_page',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Example page.
 *
 * @return string
 *   Nodes with form filter.
 */
function formfilterapi_example_page() {
  $form = formfilterapi_get_form(FORMFILTERAPI_EXAMPLE_FORM_NAME);

  $nodes = db_select('node', 'n')->extend('FormFilterAPI')
    ->fields('n')
    ->processFilters(FORMFILTERAPI_EXAMPLE_FORM_NAME)
    ->orderBy('created', 'DESC')
    ->execute()
    ->fetchAll();

  $output = drupal_render($form);

  if (!empty($nodes)) {
    foreach ($nodes as $node) {
      $n2 = node_load($node->nid);
      $view = node_view($n2, 'teaser');
      $output .= drupal_render($view);
    }
  }
  else {
    $output .= t('No content available.');
  }

  return $output;
}

/**
 * Implements hook_formfilterapi().
 *
 * Add form fields for node search.
 */
function formfilterapi_example_formfilterapi($operation, $session_name) {
  switch ($operation) {
    case 'filters':
      if ($session_name == FORMFILTERAPI_EXAMPLE_FORM_NAME) {
        $form['title'] = array(
          '#type' => 'textfield',
          '#title' => t('Title'),
          '#where' => array('like' => "n.title"),
        );

        $form['type'] = array(
          '#type' => 'select',
          '#title' => t('Type'),
          '#options' => formfilterapi_example_node_types(),
          '#where' => "n.type",
        );

        $form['uid'] = array(
          '#type' => 'select',
          '#title' => t('User'),
          '#options' => formfilterapi_example_users(),
          '#where' => "n.uid",
          '#join' => array('left', array('users' => 'u'), array('%alias.uid', '=', 'n.uid'))
        );

        $form['status'] = array(
          '#type' => 'select',
          '#title' => t('Status'),
          '#options' => array(
            '> 0' => t('Published'),
            '= 0' => t('Unpublished'),
          ),
          '#where' => array('operation' => "n.status"),
        );

        $form['promote'] = array(
          '#type' => 'checkbox',
          '#title' => t('Promoted to front page '),
          '#where' => array('expression' => '(n.promote = :value)'),
        );

        return $form;
      }
      break;
  }
}

/**
 * Implements hook_formfilterapi_alter().
 */
function formfilterapi_example_formfilterapi_alter(&$filters, $session_name, $operation) {
  if ($session_name == FORMFILTERAPI_EXAMPLE_FORM_NAME) {
    $filters['sticky'] = array(
      '#type' => 'select',
      '#title' => t('Sticky at top of lists'),
      '#options' => array(
        '1' => t('Yes'),
        '0' => t('No'),
      ),
      '#where' => 'n.sticky',
    );
  }
}

/**
 * List node types for select.
 *
 * @return array
 *   Node types.
 */
function formfilterapi_example_node_types() {
  $types = node_type_get_types();
  $result = array();

  foreach ($types as $type) {
    $result[$type->type] = $type->name;
  }

  return $result;
}

/**
 * List users for select.
 *
 * @return array
 *   Users.
 */
function formfilterapi_example_users() {
  $users = db_select('users', 'u')
    ->fields('u', array('uid', 'name'))
    ->condition('uid', 0, '!=')
    ->range(0, 10)
    ->orderBy('uid', 'DESC')
    ->execute()
    ->fetchAll();
  $result = array();

  foreach ($users as $user) {
    $result[$user->uid] = $user->name;
  }

  return $result;
}
